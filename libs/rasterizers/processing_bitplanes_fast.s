    IFD RTG
    IFD RTG_640_400_3
WIDTH           EQU     640
HEIGHT          EQU     400
RTG_PIXEL_SIZE  EQU     3
    ENDC
    
    IFD RTG_640_400_4
WIDTH           EQU     640
HEIGHT          EQU     400
RTG_PIXEL_SIZE  EQU     4
    ENDC
    
    ELSE
WIDTH       EQU 320
HEIGHT      EQU 256
    ENDC

; Fast bitplanes
; This bitplanes will be copied into chip ram by PREPARESCREEN MACRO
    IFD USE_DBLBUF
SCREEN_PTR_0: dc.l SCREEN_0
SCREEN_PTR_1: dc.l SCREEN_1
    IFD RTG
SCREEN_OFFSET: dc.l WIDTH*RTG_PIXEL_SIZE*HEIGHT*-1
    ELSE
SCREEN_OFFSET: dc.l 40*256*2*-1
    ENDC

SCREEN_PTR_OTHER_0: dc.l SCREEN_00
SCREEN_PTR_OTHER_1: dc.l SCREEN_11

SWAP_BPL MACRO
    neg.l SCREEN_OFFSET
    move.l SCREEN_OFFSET,d1
    move.l SCREEN_PTR_0,SCREEN_PTR_OTHER_0
    move.l SCREEN_PTR_1,SCREEN_PTR_OTHER_1
    add.l d1,SCREEN_PTR_0
    add.l d1,SCREEN_PTR_1
    ENDM
    ENDC
    
    IFD USE_VIDEOCHIP
    section .datachip
    ENDC

    IFD USE_BPL_SECTION
    SECTION BITPLANES,DATA_C
    ENDC

    IFD RTG
    SECTION BITPLANES,DATA_F
    IFD RTG_640_400_3
SCREEN_0:
    dcb.b WIDTH*RTG_PIXEL_SIZE*HEIGHT,0
SCREEN_1:
     IFD USE_DBLBUF
SCREEN_00:
    dcb.b WIDTH*RTG_PIXEL_SIZE*HEIGHT,0
SCREEN_11:
    ENDC
    ENDC
    IFD RTG_640_400_4
SCREEN_0: 
    dcb.b WIDTH*4*HEIGHT,$00
SCREEN_1:
     IFD USE_DBLBUF
SCREEN_00:
    dcb.b WIDTH*4*HEIGHT,$00
SCREEN_11:
    ENDC
    ENDC

    ELSE

SCREEN_0:
    dcb.b 40*256,$00

SCREEN_1:
    dcb.b 40*256,$00

    IFD USE_DBLBUF
SCREEN_00:
    dcb.b 40*256,$00

SCREEN_11:
    dcb.b 40*256,$00
    ENDC
    ENDC

processing_bitplanes_fast_screen0 MACRO
	move.l #SCREEN_0,d0
	ENDM
